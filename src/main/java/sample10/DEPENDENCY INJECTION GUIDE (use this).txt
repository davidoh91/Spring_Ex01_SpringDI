use this for dependency injection (component, controller, service, repository annotations, and context component tag



0) first add these two in maven pom.xml

<dependencies>
        <!-- added to enable @resource annotation -->
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!-- added to use lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
        </dependency>
    </dependencies>


0) for DTO, use Lombok library's annotations :
@Setter
@Getter
@AllArgsConstructor
@NoArgsConstructor
//@ToString
@Component //id="boardDTO"
@Scope("prototype")

@Value("~value for the field")


1) in applicationContext.xml, add :
<context:component-scan base-package="~base package name"/>



    @~("custom name if needed"), otherwise the name follow camel convention
    this replaces having to write on xml file <bean class="" id=boardServiceImpl"/>

2~5) @Autowired
         or
     @Resource("specific name configured in @Component and others") :
        use one of these two in order to load private member which is declared by @Component and others

2) @Component :
    for DTO

    also use Lombok annotations to shorten repetitive codes

3) @Controller :

4) @Service :

5) @Repository :
